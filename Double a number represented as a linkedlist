 // Approach-4 (Using one pointer left to right traversal)
// T.C : O(n)
// S.C : O(1)
class Solution {
    public ListNode doubleIt(ListNode head) {
        if (head.val >= 5) {
            ListNode newHead = new ListNode(0);
            newHead.next = head;
            head = newHead;
        }
        
        ListNode curr = head;
        
        while (curr != null) {
            curr.val = (curr.val * 2) % 10;
            
            if (curr.next != null && curr.next.val >= 5) {
                curr.val += 1;
            }
            
            curr = curr.next;
        }
        
        return head;
    }
}
